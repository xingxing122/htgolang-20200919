
编译过程

GO 编译型语言
源码 -> 二进制可执行程序
编译器
工具: go build file.go
      go build 当前文件夹下的go文件
                只能有一个main函数

go build 参数

编译器 -x
a. 预处理 [a]
b. 编译 [b] __pkg__.a
c. 汇编
d. 链接 [c] helloworld.exe

学习过程
1. 知识分解
2. 练习
    课堂
        讲解知识点+示例

    线下
        作业
        自己找练习内容
3. 反馈
    课堂、作业反馈
    主动反馈
    被动反馈

上课：要不要留时间练习 => 反馈给班主任
上课环节:
    作业: 1小时 [X]
    复习: 1小时-1.5小时 => 反馈给班主任
    上课新内容


标识符
必须满足：
1. 组成 非空的Unicode字符(大小写英文字符)、数字、下划线
2. 不能以数字开头
3. 不能是GO中的关键字

避免使用
4. 避免使用Go内置标识符, int
5. 标识符使用驼峰式, 我的名字 my name
            下划线式: 所有英文字母小写用_连接，my_name
            驼峰式: 所有的单词首字母大写, myName
6. 标识符是区分大小写, myname, myName


变量:
1. 变量必须先定义再使用
2. 变量都是有类型的, 指定，未指定通过值推导
3. var name type
    var name type =value
    var name = value
    name := value 只能在函数内部使用
4. 标识符在局部内只能定义一次 {}

基本数据类型:
var name type

布尔类型
    类型名: bool
    含义: 表示真/假
    字面量: true/false
    零值: false

整数
    二进制
    int8
    0000 0000
    有符号 可以表示负值
    最左侧表示符号位 1 负数， 0 整数
    1000 0000 => -128
    0111 1111 => 127
    -128 ~ 127

    无符号 只能表示大于等于0的
    0000 0000B ~ 1111 1111B
    0 ~ 255

    128 64 32 16  8  4 2  1 = 255 = 2 ^ 8 - 1 = 256 - 1 = 255
    1111 1111

    123 = 1 * 10 ^ 2 + 2 * 10 ^ 1 + 3 * 10 ^ 0
    111B => 1 * 2 ^ 2 + 1 * 2 ^ 1 + 1 * 2 ^ 0 = 4 + 2 + 1 = 7
    M * Base ^ (N - 1) 求和
    Base 10 => 10进制
    Base 2 => 2进制
    Base 8 => 8进制
    Base 16 => 16进制 0-9A(10)-F(15)

    31
    32 16 8 4 2 1
    100000
    011111

浮点数
    带小数的，非精确的
    float32
    float64
    0
    IEEE954


字符串
复数类型

数据类型
    1. 类型标识符
    2. 零值
    3. 字面量
    4. 运算操作
    5. fmt占位符
    
    
    
